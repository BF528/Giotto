# 5. add functions
usethis::use_r(name = 'giotto')
devtools::load_all(".")
createGiottoObject()
?createGiottoObject
# 4. create automatic documentation
#devtools::document('./GeTrackViz2/')
# ! do not uses comma's between imported packages
# good example:
# @import ggplot2 data.table cowplot
roxygenise('/Volumes/Ruben_Seagate/Dropbox/Packages/R_packages/Github/Giotto/')
# 4. create automatic documentation
#devtools::document('./GeTrackViz2/')
# ! do not uses comma's between imported packages
# good example:
# @import ggplot2 data.table cowplot
roxygenise('/Volumes/Ruben_Seagate/Dropbox/Packages/R_packages/Github/Giotto/')
# 2.
library(roxygen2)
# 4. create automatic documentation
#devtools::document('./GeTrackViz2/')
# ! do not uses comma's between imported packages
# good example:
# @import ggplot2 data.table cowplot
roxygenise('/Volumes/Ruben_Seagate/Dropbox/Packages/R_packages/Github/Giotto/')
?createGiottoObject
giotto
Giotto:::print.giotto()
library(Giotto)
library(Giotto)
createGiottoObject
createGiottoObject()
library(Giotto)
usethis::use_r(name = 'auxiliary')
usethis::use_r(name = 'auxiliary_giotto')
?pDataDT
library(Giotto)
Giotto::pDataDT
library(Giotto)
library(Giotto)
Giotto::createGiottoObject()
return(a+b)
myfun <- function(a, b) {
return(a+b)
}
myfun(1,2)
print(nargs)
return(a+b)
myfun <- function(a, b) {
print(nargs)
return(a+b)
}
myfun(1,2)
myfun <- function(a, b) {
print(nargs())
return(a+b)
}
myfun(1,2)
myfun <- function(a, b) {
if(nargs() == 0) {
?myfun
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a = 0, b = 10) {
if(nargs() == 0) {
?myfun
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a = NULL, b = NULL) {
if(nargs() == 0) {
?myfun
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a = NULL, b = NULL) {
if(nargs() == 0) {
cat('see ?myfun')
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a, b) {
if(nargs() == 0) {
cat('see ?myfun')
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a, b) {
if(nargs() == 0) {
stop('see ?myfun')
}
return(a+b)
}
myfun(1,2)
myfun()
myfun <- function(a, b) {
if(nargs() == 0) {
help(print)
stop('see ?myfun')
}
return(a+b)
}
myfun(1,2)
myfun()
help(print)
createGiottoObject
?createGiottoObject
library(Giotto)
library(Giotto)
?adjustGiottoMatrix
usethis::use_r(name = 'spatial_structures')
usethis::use_r(name = 'spatial_genes')
library(Giotto)
# 2.
library(roxygen2)
library(devtools)
library(usethis)
usethis::use_r(name = 'general_help')
usethis::use_r(name = 'variable_genes')
usethis::use_r(name = 'dimension_reduction')
usethis::use_r(name = 'NN_network')
usethis::use_r(name = 'clustering')
usethis::use_r(name = 'differential_expression')
usethis::use_r(name = 'spatial_visuals')
# 2.
library(roxygen2)
library(devtools)
library(usethis)
usethis::use_r(name = 'auxiliary_visuals')
usethis::use_r(name = 'spatial_interaction')
usethis::use_r(name = 'spatial_interaction_visuals')
usethis::use_r(name = 'python_hmrf')
?usethis::use_data_raw()
library(Giotto)
?addHMRF()
# 7. check package
devtools::check()
?use_mit_license
?usethis::use_mit_license
# 9. decide on license to use
usethis::use_mit_license(name = c('Ruben Dries', 'Guo-Cheng Yuan'))
# 8. add necessary packages to DESCRIPTION file
usethis::use_package(package = 'data.table', type = "Imports", min_version = NULL)
usethis::use_package(package = 'ggplot2', type = "Imports", min_version = NULL)
usethis::use_package(package = 'igraph', type = "Imports", min_version = NULL)
usethis::use_package(package = 'data.table', type = "Imports", min_version = NULL)
usethis::use_package(package = 'ggplot2', type = "Imports", min_version = NULL)
usethis::use_package(package = 'Rtsne', type = "Imports", min_version = NULL)
usethis::use_package(package = 'uwot', type = "Imports", min_version = NULL)
usethis::use_package(package = 'multinet', type = "Imports", min_version = NULL)
usethis::use_package(package = 'FactoMineR', type = "Imports", min_version = NULL)
usethis::use_package(package = 'factoextra', type = "Imports", min_version = NULL)
usethis::use_package(package = 'ComplexHeatmap', type = "Imports", min_version = NULL)
usethis::use_package(package = 'cowplot', type = "Imports", min_version = NULL)
# 9. add readme.md file
devtools::use_readme_rmd()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
?t()
?as.matrix
?apply
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 7. build package
devtools::build('Giotto')
library(Giotto)
# 10. install package
devtools::install()
library(Giotto)
# 10. install package
devtools::install()
# 10. install package
devtools::install()
?mapply
?col2rgb()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
library(uwot)
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
library(Giotto)
R.version
# 10. install package
devtools::install()
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
load_all()
?plotUMAP
load_all()
?plotUMAP
load_all()
?plotUMAP
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
# 10. install package
devtools::install()
library(Giotto)
library(Giotto)
# 10. install package
devtools::install()
# 10. install package
devtools::install()
library(Giotto)
# 10. install package
devtools::install()
## FINISHING STEPS ##
# 11. create vignette
usethis::use_vignette('cortex_example')
# 2.
library(roxygen2)
library(devtools)
library(usethis)
# 10. install package
devtools::install()
